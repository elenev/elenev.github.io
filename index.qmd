---
title: "Vadim Elenev"
format:
   html:
        code-fold: true
        echo: false
        css: styles.css
engine: julia
about:
  id: bio
  template: solana
  image: resources/Headshot.jpg
  image-alt: Vadim Elenev
  links:
    - icon: envelope-at
      text: Email
      href: mailto:velenev@jhu.edu 
    - icon: twitter-x
      text: X (Twitter)
      href: https://twitter.com/VadimElenev
    - icon: github
      text: Github
      href: https://github.com/elenev
    - icon: google
      text: Google Scholar
      href: https://scholar.google.com/citations?user=klSKBaEAAAAJ      

callout-appearance: minimal
---

:::{#bio}

Vadim Elenev is an Assistant Professor at Johns Hopkins Carey Business School. He specializes in macro finance, with a focus on financial intermediation, monetary policy, and real estate.

Prof. Elenev earned his Ph.D. in Finance from New York University Stern School of Business and a B.A. in Economics and Mathematics from the University of Virginia. His research has been published in various journals including Econometrica, and Journal of Financial Economics. His work explores the impact of financial crises, government responses to economic downturns, and the effects of monetary policy.

:::

```{julia}
#| echo: false
using YAML
cvyaml = read("cv/cv.yml", String)
cvyaml = replace(cvyaml, "\t"=>" "^4) # YAML.jl can't handle tabs
cvdata = YAML.load(cvyaml);

notblank(d,k) = k âˆˆ keys(d) && d[k] != ""

function print_paper(paper, presentations, type)
    println("::: {.callout-$type collapse=\"true\"}")
    print("## <span class=\"title-bold\">", paper["title"], "</span>")
    print("<br><span class=\"authors-normal\">", paper["coauthors"], "</span>")
    if notblank(paper,"journal")
        println("<br><span class=\"journal-italic\">", paper["journal"], "</span>")
    else
        println()
    end

    println("<p>")

    if notblank(paper,"urls")
        for u in paper["urls"]
            print(" [\\[", u["text"], "\\]](", u["href"], ")")
            println("")
        end
    end
    println("")
    
    if notblank(paper,"abstract")
        println(paper["abstract"])
    end
    this_presentations = filter(p -> p["paper"] == paper["title"], presentations)

    if this_presentations !== nothing && length(this_presentations) > 0
        this_presentations = this_presentations[]

        println("")
        println("*Presentations:*")
        println("")
        
        for pres in this_presentations["talks"]
           if !notblank(pres,"coauthor") || !pres["coauthor"]
              println(" - ", pres["venue"], ", ", pres["location"], ", ", pres["date"])
           end
        end
        println("")
    end
    println("</p>\n:::")
    println("")
end;
```


## Publications

```{julia}
#| output: asis
map(paper -> print_paper(paper, cvdata["presentations"], "tip"), cvdata["publications"]);
```

## Working Papers

```{julia}
#| output: asis
map(paper -> print_paper(paper, cvdata["presentations"], "note"), cvdata["working-papers"]);
```

## Works in Progress
```{julia}
#| output: asis
map(paper -> print_paper(paper, cvdata["presentations"], "caution"), cvdata["works-in-progress"]);
```